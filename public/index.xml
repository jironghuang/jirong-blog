<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jirong&#39;s sandbox on Jirong&#39;s sandbox</title>
    <link>/</link>
    <description>Recent content in Jirong&#39;s sandbox on Jirong&#39;s sandbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Automated Email Notification of my ETF watchlist</title>
      <link>/post/automated_email_notification/</link>
      <pubDate>Tue, 04 Sep 2018 01:37:53 +0800</pubDate>
      
      <guid>/post/automated_email_notification/</guid>
      <description>&lt;p&gt;I wrote an automated email notification code to send out my daily ETF watchlist in csv - an extension of my ETF watchlist project &lt;a href=&#34;http://jirong-huang.netlify.com/project/watch_list/&#34;&gt;here&lt;/a&gt;. I figured out that people will not visit my site. So why not blast out the watchlist instead:)&lt;/p&gt;

&lt;p&gt;And if you are interested in the code. Here you go.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Steps for sending watchlist
library(&amp;quot;rJava&amp;quot;)
library(&#39;mailR&#39;)

source(&amp;quot;./R/emails.R&amp;quot;)

# Write the content of your email
msg &amp;lt;- paste(&amp;quot;Hey there, I&#39;m sending this ETF watchlist that is updated as of &amp;quot;, 
             &amp;quot;\n&amp;quot;,
             as.character(date()),
             &amp;quot;\n&amp;quot;,
             &amp;quot;This is part of my daily automated ETF dashboard + Email notification and I thought you may be interested in it. See the following link for more details: http://jirong-huang.netlify.com/project/watch_list/&amp;quot;,
             &amp;quot;\n&amp;quot;,
             &amp;quot;If this irritates you too much, let me know and I can take you out of this mailing list:)&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;Best,&amp;quot;,&amp;quot;Jirong&amp;quot;, sep = &amp;quot;\n&amp;quot;)

# Define who the sender is
sender &amp;lt;- &amp;quot;jironghuang88@gmail.com&amp;quot;
# Define who should get your email
recipients &amp;lt;- emails
              # Send your email with the send.mail function
              send.mail(from = sender,
                        to = recipients,
                        subject = &amp;quot;ETF Watchlist&amp;quot;,
                        body = msg,
                        attach.files = &amp;quot;./Output/yahoo_crawled_data.csv&amp;quot;,
                        smtp = list(host.name = &amp;quot;smtp.gmail.com&amp;quot;, port = 587,
                                    user.name = &amp;quot;jironghuang88@gmail.com&amp;quot;,
                                    passwd = Sys.getenv(&amp;quot;mail&amp;quot;), ssl = TRUE),
                        authenticate = TRUE,
                        send = TRUE)
              
              # JAVA_HOME /usr/lib/jvm/java-8-oracle             
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Asset Alllocation</title>
      <link>/asset_allocation/asset_allocation/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/asset_allocation/asset_allocation/</guid>
      <description>&lt;p&gt;This section indicates my overall current asset allocation, not based on any quantitative analysis but based on rule-of-thumb from wealth management community.&lt;/p&gt;

&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubchart?oid=963907902&amp;amp;format=interactive&#34; width=&#34;1000&#34; height=&#34;1000&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Loading...&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Naming Conventions in R. Let&#39;s call it JR Notations</title>
      <link>/post/jr-naming-conventions-in-r/</link>
      <pubDate>Sun, 26 Aug 2018 14:09:02 +0800</pubDate>
      
      <guid>/post/jr-naming-conventions-in-r/</guid>
      <description>

&lt;h2 id=&#34;naming-conventions-in-r-let-s-call-it-jr-notations&#34;&gt;Naming Conventions in R. Let&amp;rsquo;s call it JR Notations.&lt;/h2&gt;

&lt;p&gt;&amp;lsquo;Naming conventions&amp;rsquo; is a huge thing in many programming languages/ paradigms/ communities. But it&amp;rsquo;s noticeably absent in the R programming community.&lt;/p&gt;

&lt;p&gt;With some inspiration from the Hungarian Notation, here&amp;rsquo;s a blue-print that I came up with while working on a major R project over the last 2 months. Drumroll please&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;1-naming-conventions-for-r-scripts&#34;&gt;1. Naming conventions for R scripts&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;F_ for R scripts that contains functions.&lt;/li&gt;
&lt;li&gt;O_ for R scripts that contains classes.&lt;/li&gt;
&lt;li&gt;P_ for R scripts that runs the procedures.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-naming-conventions-for-r-functions-at-the-start-of-the-function-name&#34;&gt;2. Naming conventions for R functions. At the start of the function name,&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;bf stands for a return in boolean value&lt;/li&gt;
&lt;li&gt;sf stands for a return in string value&lt;/li&gt;
&lt;li&gt;nf stands for a return in numeric value&lt;/li&gt;
&lt;li&gt;mf stands for a return in matrix values&lt;/li&gt;
&lt;li&gt;lf stands for a return in list values&lt;/li&gt;
&lt;li&gt;af stands for a return in array values&lt;/li&gt;
&lt;li&gt;df stands for a return in data frame&lt;/li&gt;
&lt;li&gt;vf stands for a void function. i.e. executing a function without returning a variable.&lt;/li&gt;
&lt;li&gt;gf stands for a return in graph value&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-naming-conventions-for-parameters-in-functions&#34;&gt;3. Naming conventions for parameters in functions&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;bp stands for boolean parameter&lt;/li&gt;
&lt;li&gt;sp stands for string parameter&lt;/li&gt;
&lt;li&gt;np stands for numeric parameter&lt;/li&gt;
&lt;li&gt;mp stands for matrix parameter&lt;/li&gt;
&lt;li&gt;lp stands for list parameter&lt;/li&gt;
&lt;li&gt;ap stands for array parameter&lt;/li&gt;
&lt;li&gt;dp stands for data frame parameter&lt;/li&gt;
&lt;li&gt;gp stands for a return in graph parameter&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;4-naming-conventions-for-r-variables&#34;&gt;4. Naming conventions for R variables&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;b stands for boolean variable&lt;/li&gt;
&lt;li&gt;s stands for string variable&lt;/li&gt;
&lt;li&gt;n stands for numeric variable&lt;/li&gt;
&lt;li&gt;m stands for matrix variable&lt;/li&gt;
&lt;li&gt;l stands for list variable&lt;/li&gt;
&lt;li&gt;a stands for array variable&lt;/li&gt;
&lt;li&gt;d stands for data frame variable&lt;/li&gt;
&lt;li&gt;g stands for graph variable&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;5-naming-conventions-for-r-global-variables&#34;&gt;5. Naming conventions for R global variables&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;bg stands for boolean global variable&lt;/li&gt;
&lt;li&gt;sg stands for string global variable&lt;/li&gt;
&lt;li&gt;ng stands for numeric global variable&lt;/li&gt;
&lt;li&gt;mg stands for matrix global variable&lt;/li&gt;
&lt;li&gt;lg stands for list global variable&lt;/li&gt;
&lt;li&gt;ag stands for array global variable&lt;/li&gt;
&lt;li&gt;dg stands for data frame global variable&lt;/li&gt;
&lt;li&gt;gg stands for global graph variable&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Skin in the Game</title>
      <link>/skin/skin-in-the-game/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/skin/skin-in-the-game/</guid>
      <description>&lt;p&gt;In this section, I&amp;rsquo;ll note all the quantitative decisions I have made in the areas of investing, trading and betting. Money allocated here excludes the portion that I placed in conservative asset allocation.&lt;/p&gt;

&lt;p&gt;Skin in the game or put in another way - putting where your mouth aligns with my core belief. Any serious analysis that I feel strongly about should have a stake in the game.&lt;/p&gt;

&lt;p&gt;Also, I&amp;rsquo;m of the view that if you make enough calculated bets with positive expected returns in your life, eventually it will be a net positive in the long run.&lt;/p&gt;

&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=606546538&amp;amp;single=true&amp;amp;widget=true&amp;amp;headers=false&#34; width=&#34;1000&#34; height=&#34;1000&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Loading...&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>If you&#39;re interested in the content, please subscribe here</title>
      <link>/subscribe/subscribe/</link>
      <pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/subscribe/subscribe/</guid>
      <description>&lt;iframe src=&#34;https://docs.google.com/forms/d/e/1FAIpQLSddfEPQE7LHMi7MdfzPx6tJL_KPDKsEpLOloPHY9R04-n48sQ/viewform?usp=sf_link&#34; width=&#34;1000&#34; height=&#34;1000&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;
Loadingâ€¦
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Investment compass</title>
      <link>/project/investment_compass_guidance/</link>
      <pubDate>Thu, 09 Aug 2018 21:30:46 +0800</pubDate>
      
      <guid>/project/investment_compass_guidance/</guid>
      <description>

&lt;h2 id=&#34;investment-compass-kindly-wait-10-seconds-for-the-entire-app-to-load-best-viewed-in-desktop&#34;&gt;Investment Compass (Kindly wait 10 seconds for the entire app to load. Best viewed in Desktop)&lt;/h2&gt;

&lt;p&gt;This serves as a compass for me to visualize the potential returns given the % fall from 52 week high. See my linkedin article &lt;a href=&#34;https://www.linkedin.com/pulse/investment-compass-our-volatile-times-jirong-huang/&#34;&gt;here&lt;/a&gt; for further explanation on why I think this is a good indicator.&lt;/p&gt;

&lt;p&gt;The app consists of 3 tabs. The &amp;lsquo;Visualize&amp;rsquo; tab contains 3 graphs plotting % fall from 52 week high against the expected returns 1 to 3 years later. And the value boxes are simply the fitted values from the best fit lines.&lt;/p&gt;

&lt;p&gt;The second tab contains the description of the indexes. For eg. ^STI refers to Straits Times Index. It will be useful for selection of the Index under Visualization tab.&lt;/p&gt;

&lt;p&gt;The third tab is just a summary of the Linkedin article.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re interested in reading the codes, pls visit my github &lt;a href=&#34;https://github.com/jironghuang/investment_compass&#34;&gt;link&lt;/a&gt;. At the moment, the lagging of indicators are done in a grossly inefficient way because I was just cobbling together some codes I did in the past. Will optimize it by using parallelized functions like mclapply in the future (used for crawling the stock process but not the computation).&lt;/p&gt;

&lt;iframe src=&#34;https://sef88.shinyapps.io/investment_compass/&#34; width=&#34;1200&#34; height=&#34;1500&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Rolling out the Investment Compass interactive app that I promised eons ago</title>
      <link>/post/rolling-out-the-investment-compass-interactive-app-that-i-promised-to-myself-eons-ago/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/rolling-out-the-investment-compass-interactive-app-that-i-promised-to-myself-eons-ago/</guid>
      <description>&lt;p&gt;Finally I had some time to sit down to work on the interactive app. From what was an hideous app to a somewhat Minimum Viable Product (MVP) version of an app. (Shhh&amp;hellip;I&amp;rsquo;m not really a User Interface, UI person).&lt;/p&gt;

&lt;p&gt;This serves as a compass for me to visualize the potential returns given the % fall from 52 week high. See my linkedin article &lt;a href=&#34;https://www.linkedin.com/pulse/investment-compass-our-volatile-times-jirong-huang/&#34;&gt;here&lt;/a&gt; for further explanation on why I think this is a good indicator.&lt;/p&gt;

&lt;p&gt;The app consists of 3 tabs. The &amp;lsquo;Visualize&amp;rsquo; tab contains 3 graphs plotting % fall from 52 week high against the expected returns 1 to 3 years later. And the value boxes are simply the fitted values from the best fit lines.&lt;/p&gt;

&lt;p&gt;The second tab contains the description of the indexes. For eg. ^STI refers to Straits Times Index. It will be useful for selection of the Index under Visualization tab.&lt;/p&gt;

&lt;p&gt;The third tab is just a summary of the Linkedin article.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re interested in reading the codes, pls visit my github &lt;a href=&#34;https://github.com/jironghuang/investment_compass&#34;&gt;link&lt;/a&gt;. At the moment, the lagging of indicators are done in a grossly inefficient way because I was just cobbling together some codes I did in the past. Will optimize it by using parallelized functions like mclapply in the future (used for crawling the stock process but not the computation).&lt;/p&gt;

&lt;iframe src=&#34;https://sef88.shinyapps.io/investment_compass/&#34; width=&#34;1200&#34; height=&#34;1500&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Updated ETF project codes</title>
      <link>/post/etf_watchlist_project/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/etf_watchlist_project/</guid>
      <description>&lt;div id=&#34;updated-etf-watchlist-project&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Updated ETF watchlist project&lt;/h2&gt;
&lt;p&gt;While watching a world cup match today, I updated my ETF watchlist project (you may click &lt;a href=&#34;/project/watch_list&#34;&gt;here&lt;/a&gt; if you havenâ€™t seen it yet)&lt;/p&gt;
&lt;p&gt;You may find the github code &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34;&gt;here&lt;/a&gt;. In the revision, I parallelized the crawling - essentially tapping on all the cores in my machines.&lt;/p&gt;
&lt;p&gt;To create your own watchlist. Follow these steps,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install R and R studio.&lt;/li&gt;
&lt;li&gt;In Mac or Linux, type the following in command line git clone &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34; class=&#34;uri&#34;&gt;https://github.com/jironghuang/ETF_watchlist&lt;/a&gt; . In windows, you may visit the link and download it as zipped folder&lt;/li&gt;
&lt;li&gt;Open the .Rproj&lt;/li&gt;
&lt;li&gt;Tweak the input file to change your watchlist. Ticker symbol should follow yahoo ticker naming convention (e.g.Â VWRD.L for the ETF listed on stock exchange)&lt;/li&gt;
&lt;li&gt;Ctrl + A and Ctrl + Enter. Or just click the run button in the top right hand of Rstudio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: For the auth.r section, you may comment it out if you do not wish to upload the crawled data in googlesheet.&lt;/p&gt;
&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=0&amp;amp;single=true&#34; width=&#34;900&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Updated ETF Watchlist Codes</title>
      <link>/post/updated-etf-watchlist-codes/</link>
      <pubDate>Sat, 07 Jul 2018 01:37:53 +0800</pubDate>
      
      <guid>/post/updated-etf-watchlist-codes/</guid>
      <description>

&lt;h2 id=&#34;updated-etf-watchlist-project&#34;&gt;Updated ETF watchlist project&lt;/h2&gt;

&lt;p&gt;While watching a world cup match today, I updated my ETF watchlist project (you may click &lt;a href=&#34;/project/watch_list&#34;&gt;here&lt;/a&gt; if you haven&amp;rsquo;t seen it yet)&lt;/p&gt;

&lt;p&gt;You may find the github code &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34;&gt;here&lt;/a&gt;. In the revision, I parallelized the crawling - essentially tapping on all the cores in my machines.&lt;/p&gt;

&lt;p&gt;To create your own watchlist. Follow these steps,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install R and R studio.&lt;/li&gt;
&lt;li&gt;In Mac or Linux, type the following in command line git clone &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34; target=&#34;_blank&#34;&gt;https://github.com/jironghuang/ETF_watchlist&lt;/a&gt; . In windows, you may visit the link and download it as zipped folder&lt;/li&gt;
&lt;li&gt;Open the .Rproj&lt;/li&gt;
&lt;li&gt;Tweak the input file to change your watchlist. Ticker symbol should follow yahoo ticker naming convention (e.g. VWRD.L for the ETF listed on stock exchange)&lt;/li&gt;
&lt;li&gt;Ctrl + A and Ctrl + Enter. Or just click the run button in the top right hand of Rstudio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: For the auth.r section, you may comment it out if you do not wish to upload the crawled data in googlesheet.&lt;/p&gt;

&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=0&amp;single=true&#34; width=&#34;900&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Analyzing Warren Buffett Cash Level</title>
      <link>/post/buffett/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/buffett/</guid>
      <description>&lt;div id=&#34;warren-buffett-the-sage&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Warren Buffett the sage&lt;/h2&gt;
&lt;p&gt;Itâ€™s always interesting to understand investment gurusâ€™ thought process. And one of the ways is to look at their companiesâ€™ balance sheet.&lt;/p&gt;
&lt;p&gt;Warren Buffett, the Sage &amp;amp; CEO of Berkshire, in recent decade has always been known to hoard cash. And before the 2008 crisis, he held cash level of 40-50% relative to its equity - probably trying to stay out of the overvalued market and waiting for the right opportunity to swoop in for a â€˜BIG CATCHâ€™. And his efforts (or no effort) paid off. He made huge bets on companies like Goldman Sachs when prices are really depressed. And he was rewarded handsomely.&lt;/p&gt;
&lt;p&gt;At the moment, his cash level ratios for both cash/equity &amp;amp; cash/asset are on the low side - suggesting that the markets arenâ€™t overvalued. And heâ€™s willing to stay invested in the market.&lt;/p&gt;
&lt;p&gt;That being said, thereâ€™re few factors in play,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As your assets grows, it may be really hard to maintain a high proportion of cash since opportunity of holding cash is really high!&lt;/li&gt;
&lt;li&gt;Types of business will affect your appetite to hold cash. Insurance business, for instance requires more cash for payout during disasters and calamaties.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the near future, I will probably integrate quarterly earnings and display the charts as an interactive dashboard - hosting live on the cloud.&lt;/p&gt;
&lt;p&gt;PS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Honestly, the time series here is a bit disjointed. But I guess it still yields some useful information.&lt;/li&gt;
&lt;li&gt;I painstakingly keyed in the numbers from gurufocus.com (canâ€™t extract the numbers from the chart)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat = read.csv(&amp;quot;berkshire_fin_statement.csv&amp;quot;, stringsAsFactors = F)
dat$cash_over_asset = round(100 * (dat$cash / dat$asset),1)
dat$cash_over_equity = round(100 * (dat$cash / dat$equity), 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(reshape2)
dat_long = melt(dat, id = c(&amp;quot;year&amp;quot;))
dat_long = subset(dat_long, dat_long$variable == &amp;quot;cash_over_asset&amp;quot; |
                    dat_long$variable == &amp;quot;cash_over_equity&amp;quot;)

ggplot(data = dat_long,
       aes(x = year, y = value, colour = variable)) +
       geom_line() + scale_x_continuous(breaks = seq(1990, 2017, 2)) +
       labs(x=&amp;quot;Year&amp;quot;,y=&amp;quot;Percentage&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/buffett_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ETFs watchlist</title>
      <link>/project/watch_list/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/watch_list/</guid>
      <description>&lt;div id=&#34;etfs-watchlist&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;ETFs watchlist&lt;/h2&gt;
&lt;p&gt;In my Ubunutu - Linux laptop, I wrote some R scripts to crawl the yahoo financial data. When the clock strikes midnight, my cronjob task scheduler will execute these scripts in a parallel fashion to extract the data.&lt;/p&gt;
&lt;p&gt;Then my script will log into my google account via SSH and paste the crawled data into 1 of the googlesheet tabs. And this is linked to my portfolio allocation, computation and milestones.&lt;/p&gt;
&lt;p&gt;It also serves as a watchlist for me to monitor which of these ETFs are undervalued via % fall from 52 week high. See my linkedin article &lt;a href=&#34;https://www.linkedin.com/pulse/investment-compass-our-volatile-times-jirong-huang/&#34;&gt;here&lt;/a&gt; for further explanation on why I think this is a good indicator.&lt;/p&gt;
&lt;p&gt;You may find my R scripts &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34;&gt;here&lt;/a&gt;. I didnâ€™t really document this repo well so do approach me if youâ€™ve any questions.&lt;/p&gt;
&lt;p&gt;And hereâ€™s the googlesheet (updated daily) opened to the public. Hope you find it useful!&lt;/p&gt;
&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=0&amp;amp;single=true&#34; width=&#34;900&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>World Cup - Singapore Pools odds</title>
      <link>/post/odds_analysis_worldcup/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/odds_analysis_worldcup/</guid>
      <description>&lt;div id=&#34;hey-its-the-world-cup-season---tapping-into-a-machine-learning-based-paper&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hey itâ€™s the world cup season - Tapping into a Machine Learning based paper&lt;/h2&gt;
&lt;p&gt;Once again as a Singaporean citizen, thereâ€™re no other choices but to place my bets in Singapore pools. Betting in SG is not my preferred way to grow my wealth because of the crazy ~15% spread in Sg pools. In international sites, the spread is usually close to 3-5%. Oh well, thatâ€™s illegal.&lt;/p&gt;
&lt;p&gt;But because this is the world cup season, I decide to make some small punts! And of course with some analytical slant.&lt;/p&gt;
&lt;p&gt;I came across this academic paper (&lt;a href=&#34;https://arxiv.org/pdf/1806.03208.pdf&#34; class=&#34;uri&#34;&gt;https://arxiv.org/pdf/1806.03208.pdf&lt;/a&gt;) written by Darmouth professors. They use a suite of features from individual playersâ€™ abilities, to teamsâ€™ rankings and even Countriesâ€™ GDP! Looking at all the data fields used, the data collection process must have been a nightmare. The authors then use Random Forest with simulations (think of Dr Strange foraysâ€™ into 14 milion possibilities) to predict the results. The probabilites for each team reaches each round is listed in 1 of the pages.&lt;/p&gt;
&lt;p&gt;As the probabilities listed are accurate only for round of 16 (non-conditionally), I shall only place my bets for round of 16 should I find any undervalued opportunities. In addition, as one of the group Aâ€™s game has been played, Iâ€™ll ignore the analysis from Group A since the â€˜true probabilityâ€™ has already shifted.&lt;/p&gt;
&lt;p&gt;Also, if my analysis shows that 2 of the teams in the same group are undervalued, Iâ€™ll only pick 1 of them because of the possible non-independence issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;results&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;According to the table at the end of the web page, only 5 teams are undervalued now! And they are Saudi, Morocco, Iceland, Switzerland and Sweden.&lt;/li&gt;
&lt;li&gt;Since Saudi has been trashed, I shall ignore them.&lt;/li&gt;
&lt;li&gt;And since these countries are in different groups, the round-of-16 probabilities used are strictly independent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disclosure: - I bought into Morocoo, Icleand, Switzerland and Sweden with bet sizes of 200, 350, 350, 350. The allocation is based on â€˜True - SG odds differenceâ€™ &amp;amp; â€˜True - SG probabilities differenceâ€™. Fingers crossed and wish me luck!&lt;/p&gt;
&lt;p&gt;Update: - Switzerland and Sweden won but the rest lost. So, I won 97 (got back 1347) while risking 1250. A return of 8% in a space of 1 month. May not seem much - but thatâ€™s the return in 1 month! Ok, thatâ€™s not a lot. - Earning a profit doesnâ€™t mean Iâ€™m right. I believe I had a sound framework; thatâ€™s why I went with my decision. I think thatâ€™s the most important.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Analyzing UEFA champons league odds
dat = data.frame(team = c(&amp;quot;uru&amp;quot;,&amp;quot;rus&amp;quot;,&amp;quot;egy&amp;quot;,&amp;quot;sau&amp;quot;,
                          &amp;quot;spa&amp;quot;,&amp;quot;por&amp;quot;,&amp;quot;mor&amp;quot;,&amp;quot;ira&amp;quot;,
                          &amp;quot;fra&amp;quot;,&amp;quot;den&amp;quot;,&amp;quot;per&amp;quot;,&amp;quot;aus&amp;quot;,
                          &amp;quot;arg&amp;quot;,&amp;quot;cro&amp;quot;,&amp;quot;nig&amp;quot;,&amp;quot;ice&amp;quot;,
                          &amp;quot;bra&amp;quot;,&amp;quot;swi&amp;quot;,&amp;quot;ser&amp;quot;,&amp;quot;coa&amp;quot;,
                          &amp;quot;ger&amp;quot;,&amp;quot;mex&amp;quot;,&amp;quot;swe&amp;quot;,&amp;quot;kor&amp;quot;,
                          &amp;quot;bel&amp;quot;,&amp;quot;eng&amp;quot;,&amp;quot;tun&amp;quot;,&amp;quot;pan&amp;quot;,
                          &amp;quot;col&amp;quot;,&amp;quot;pol&amp;quot;,&amp;quot;sen&amp;quot;,&amp;quot;jap&amp;quot;),
                 sg = c(1.15,1.16,2.1,11,
                        1.05,1.12,3.5,6,
                        1.03,1.53,2.3,4.2,
                        1.02,1.45,3.15,3.2,
                        1.02,1.85,1.9,4,
                        1.07,1.80,2,3.25,
                        1.03,1.05,4,8,
                        1.25,1.5,2,3),
                 ml_prop = c(86.6,50.4,45.5,17.5,
                             88.4,67.5,30.3,13.8,
                             85.5,59.0,39.2,16.2,
                             81.6,65.9,15.8,36.6,
                             83.5,58.9,36.2,21.4,
                             86.5,41.5,54,17.9,
                             86.3,79.8,22.8,11.1,
                             79.2,60.6,39.7,20.5))

dat$ml = 1/(dat$ml_prop/100)

dat$underval = ifelse(dat$ml &amp;lt; dat$sg,1,0)

library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat = arrange(dat,desc(dat$underval))
dat$sg_prob = 100*1/dat$sg

print(dat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    team    sg ml_prop       ml underval   sg_prob
## 1   sau 11.00    17.5 5.714286        1  9.090909
## 2   mor  3.50    30.3 3.300330        1 28.571429
## 3   ice  3.20    36.6 2.732240        1 31.250000
## 4   swi  1.85    58.9 1.697793        1 54.054054
## 5   swe  2.00    54.0 1.851852        1 50.000000
## 6   uru  1.15    86.6 1.154734        0 86.956522
## 7   rus  1.16    50.4 1.984127        0 86.206897
## 8   egy  2.10    45.5 2.197802        0 47.619048
## 9   spa  1.05    88.4 1.131222        0 95.238095
## 10  por  1.12    67.5 1.481481        0 89.285714
## 11  ira  6.00    13.8 7.246377        0 16.666667
## 12  fra  1.03    85.5 1.169591        0 97.087379
## 13  den  1.53    59.0 1.694915        0 65.359477
## 14  per  2.30    39.2 2.551020        0 43.478261
## 15  aus  4.20    16.2 6.172840        0 23.809524
## 16  arg  1.02    81.6 1.225490        0 98.039216
## 17  cro  1.45    65.9 1.517451        0 68.965517
## 18  nig  3.15    15.8 6.329114        0 31.746032
## 19  bra  1.02    83.5 1.197605        0 98.039216
## 20  ser  1.90    36.2 2.762431        0 52.631579
## 21  coa  4.00    21.4 4.672897        0 25.000000
## 22  ger  1.07    86.5 1.156069        0 93.457944
## 23  mex  1.80    41.5 2.409639        0 55.555556
## 24  kor  3.25    17.9 5.586592        0 30.769231
## 25  bel  1.03    86.3 1.158749        0 97.087379
## 26  eng  1.05    79.8 1.253133        0 95.238095
## 27  tun  4.00    22.8 4.385965        0 25.000000
## 28  pan  8.00    11.1 9.009009        0 12.500000
## 29  col  1.25    79.2 1.262626        0 80.000000
## 30  pol  1.50    60.6 1.650165        0 66.666667
## 31  sen  2.00    39.7 2.518892        0 50.000000
## 32  jap  3.00    20.5 4.878049        0 33.333333&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Journey of a non coder to a budding computer scientist</title>
      <link>/post/journey-from-a-non-coder-to-a-budding-computer-scientist/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/journey-from-a-non-coder-to-a-budding-computer-scientist/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a true story. And it happens on 1 faithful night during the wee hours&amp;hellip; when I was inspired to write a statement of purpose for my Msc Georgia Tech application.&lt;/p&gt;

&lt;p&gt;I am currently an analyst, working in Korn Ferry Institute, a research and analytics arm of Korn Ferry. At the same time, I&amp;rsquo;m &amp;lsquo;juggling&amp;rsquo; my work-study-life balance as a Part-Time student, studying Post-Graduate Diploma Computer Science in University of Adelaide.&lt;/p&gt;

&lt;p&gt;I started out in Economics Discipline. First, as an Economics undergraduate, then I entered the workforce as an Economist in Singapore&amp;rsquo;s Public service. I never coded seriously till then. During my time in Public service, I was exposed to sophisticated Economic Models, text analytics projects that required serious programming skills in VBA, Python and R. It was during this time when my interests in programming were piqued.&lt;/p&gt;

&lt;p&gt;I started immersing myself in computer science through MOOC, but felt that that it wasn&amp;rsquo;t sufficient. In the end, I bit the bullet and enrolled myself in University of Adelaide&amp;rsquo;s Part-Time Program. I&amp;rsquo;ve never looked back since then.&lt;/p&gt;

&lt;p&gt;Computer Science discipline allows me to structure my code in an efficient way. Prior to taking computer science, I was paying little attention to the efficiency of my code. But after going through the arduous computer science program in University of Adelaide, I started paying more attention to the complexity of my programs; started writing more functions to ensure re-usability of my programs on a larger scale.&lt;/p&gt;

&lt;p&gt;If I&amp;rsquo;m fortunate and given the chance to be a student of Georgia Tech, I intend to specialize in Machine Learning. It complements my existing knowledge in Statistics picked up during my Masters in NUS. In addition, I&amp;rsquo;ve immediate chance to apply what I&amp;rsquo;ve learnt in my current job, particularly in the area of Psychology and Organizational Behavior.&lt;/p&gt;

&lt;p&gt;As a busy professional, Georgia Tech&amp;rsquo;s Part-Time program provides the best of all options - in terms of cost, flexibility without sacrificing the rigor of a University Program. I sincerely believe I&amp;rsquo;ve the tenacity and self-discipline to complete the program as evident in my past 4 years as a Part-Time student studying Msc Statistics in National University of Singapore and G.Dip. Computer Science in University of Adelaide.&lt;/p&gt;

&lt;p&gt;My greatest impression of Georgia Tech came when Former President, Barack Obama praised the quality and affordability of the program during his speech in 2015. It never left me. Understanding that matriculating in the program requires background in Computer Science, I started building my foundations towards it. I do hope I&amp;rsquo;ve done enough!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Betting in Singapore Pools</title>
      <link>/post/odds_analysis/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/odds_analysis/</guid>
      <description>&lt;div id=&#34;finding-value-in-singapore-pools&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Finding value in Singapore Pools&lt;/h2&gt;
&lt;p&gt;Of all places, this is the last place I expect to find value. But I found it - supposedly!&lt;/p&gt;
&lt;p&gt;I compared the Singapore Pools Odds against Fivethirtyeight blog probabilities of teamsâ€™ winning various leagues.&lt;/p&gt;
&lt;p&gt;The spread in Singpore Pools is often insane. In a typical 1X2 game, the odds is around 15% - as compared to a spread of 3% in overseas betting houses - which btw is illegal in Singapore.&lt;/p&gt;
&lt;p&gt;Spread simply is summation of the inverse for all decimal odds subtracted by 1. The amount you concede to the â€˜houseâ€™.&lt;/p&gt;
&lt;p&gt;As much as this blog is about analytics and showcasing my skillset, itâ€™s also about having skin in the game.&lt;/p&gt;
&lt;p&gt;Disclosure: I bet 280 dollars on Barcelona to win Champions League in early March. Why $280 you may ask? I think thatâ€™s the amount of cash I had in my wallet at that point of time. I just realised Barcelona lost by 3-0 today. Thatâ€™s like a black swan event. I was in the money - options terminology - 5 dollars odds down to 3 dollars. But poof! Oh well. Itâ€™s something I have to accept in the probability game.&lt;/p&gt;
&lt;p&gt;Hereâ€™s my short analysis. Enjoy!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Analyzing UEFA champons league odds
dat_cl = data.frame(team = c(&amp;quot;real&amp;quot;,&amp;quot;bayern&amp;quot;,&amp;quot;barca&amp;quot;,&amp;quot;manu&amp;quot;,&amp;quot;mancity&amp;quot;,&amp;quot;jue&amp;quot;),
                 sg = c(4.5,5,5,15,3.3,8),
                 five = c(1/0.15,1/0.19,1/0.22,1/0.02,1/0.15,1/0.13))


dat_cl$underval = ifelse(dat_cl$five &amp;lt; dat_cl$sg,1,0)

print(dat_cl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      team   sg      five underval
## 1    real  4.5  6.666667        0
## 2  bayern  5.0  5.263158        0
## 3   barca  5.0  4.545455        1
## 4    manu 15.0 50.000000        0
## 5 mancity  3.3  6.666667        0
## 6     jue  8.0  7.692308        1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Championship league
dat_champ = data.frame(team = c(&amp;quot;wolf&amp;quot;,&amp;quot;cardiff&amp;quot;,&amp;quot;aston&amp;quot;,&amp;quot;fulham&amp;quot;),
                       sg = c(1.03,5,15,30),
                       five = c(1/0.85,1/0.1,1/0.03,1/0.01))

dat_champ$underval = ifelse(dat_champ$five &amp;lt; dat_champ$sg,1,0)

print(dat_champ)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      team    sg       five underval
## 1    wolf  1.03   1.176471        0
## 2 cardiff  5.00  10.000000        0
## 3   aston 15.00  33.333333        0
## 4  fulham 30.00 100.000000        0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#europa
dat_eur = data.frame(team = c(&amp;quot;ath&amp;quot;,&amp;quot;dort&amp;quot;,&amp;quot;ars&amp;quot;,&amp;quot;lazio&amp;quot;,&amp;quot;mars&amp;quot;,&amp;quot;rb_lei&amp;quot;,&amp;quot;lyon&amp;quot;,&amp;quot;ac&amp;quot;,&amp;quot;cska&amp;quot;,&amp;quot;sport&amp;quot;,&amp;quot;ath_bil&amp;quot;,&amp;quot;rb_sal&amp;quot;,&amp;quot;zenit&amp;quot;,&amp;quot;dyn&amp;quot;),
                       sg = c(2.9,5,6,9.5,17,10,12,11,40,15,17,150,40,80),
                       five = c(1/0.26,1/0.11,1/0.09,1/0.08,1/0.06,1/0.06,1/0.05,1/0.05,1/0.04,1/0.04,1/0.04,1/0.03,1/0.03,1/0.03))

dat_eur$underval = ifelse(dat_eur$five &amp;lt; dat_eur$sg,1,0)

print(dat_eur)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       team    sg      five underval
## 1      ath   2.9  3.846154        0
## 2     dort   5.0  9.090909        0
## 3      ars   6.0 11.111111        0
## 4    lazio   9.5 12.500000        0
## 5     mars  17.0 16.666667        1
## 6   rb_lei  10.0 16.666667        0
## 7     lyon  12.0 20.000000        0
## 8       ac  11.0 20.000000        0
## 9     cska  40.0 25.000000        1
## 10   sport  15.0 25.000000        0
## 11 ath_bil  17.0 25.000000        0
## 12  rb_sal 150.0 33.333333        1
## 13   zenit  40.0 33.333333        1
## 14     dyn  80.0 33.333333        1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Permanent Portfolio that I Implemented</title>
      <link>/project/perm_port_proj/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/perm_port_proj/</guid>
      <description>&lt;!-- https://stackoverflow.com/questions/47371794/how-to-create-an-image-preview-for-a-post-in-hugo-academic-from-rmd --&gt;
&lt;div id=&#34;portfolio-performance-since-2-april-18&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Portfolio Performance since 2 April 18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Include Google Sheet iframe link in future.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;an-all-weather-portfolio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;An all weather portfolio&lt;/h2&gt;
&lt;p&gt;Note: I carried out a similar analysis as 1 of the posts Iâ€™ve written (&lt;a href=&#34;https://jirong-huang.netlify.com/post/perm_port/&#34; class=&#34;uri&#34;&gt;https://jirong-huang.netlify.com/post/perm_port/&lt;/a&gt;). The difference is that I considered 4 assets (including T-bills) instead of 3. The performance in the post is more reflective of stress-test perfromance (Sharpe, Drawdown Ratio, etc.)&lt;/p&gt;
&lt;p&gt;Based on the literature, permanent portfolio is an investment strategy that is able to yield moderate returns and relatively low volatility. Investor is recommended to invest equally (25%) into GLD, Index, Bond and Cash and rebalance it back to this proportion on regular intervals.&lt;/p&gt;
&lt;p&gt;This approach is something that Iâ€™m keen to adopt for a portion of my portfolio.&lt;/p&gt;
&lt;p&gt;To investigate the feasibility, I simulated a portfolio starting at $400 on 2009 (limited by complete series). Hereâ€™s the asset allocation proportion,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GLD: Gold&lt;/li&gt;
&lt;li&gt;TLT: 20 Years Treasury Bond&lt;/li&gt;
&lt;li&gt;VGSH: Vanguard Short Term Bond&lt;/li&gt;
&lt;li&gt;VTI: Total US stock&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I admit that the code that I wrote here is very procedural. If Iâ€™ve time, Iâ€™ll try to â€˜functionalizeâ€™ the codes so that I could use it for other portfolio simulation purposes.&lt;/li&gt;
&lt;li&gt;The looping in the R vectorized setting is known to be super slow! If I really have time to spare, Iâ€™ll convert some of the loops to Rcpp (C++). But I highly doubt so since the data is not that huge at the moment (unless I venture into tick data. Oh well, who knows).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;key-points&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Key points&lt;/h2&gt;
&lt;p&gt;On the annualized returns, itâ€™s not really fantastic. But it still returns a respectable annualized performance of 5% (+ 2% dividends?)&lt;/p&gt;
&lt;p&gt;What stands out, however, are the following performance metrics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In terms of draw-down, it performed remarkably well relative to a Total US Stock portfolio. It suffered a loss of only 9% as compared to a huge loss of 20 + % in other assets; could be more if full Great Financial Crisis is included.&lt;/li&gt;
&lt;li&gt;On the Sharpe Ratio (annualized returns in excess of risk-free rate per unit of volatility), itâ€™s considerably higher than other assets - albeit lower than Total Stock (in my other analysis with longer time period, itâ€™s considerably higher).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to adapt or adopt the code. You can easily substitute the stocks based on your preferred asset allocation.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;setting-up-the-analysis.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setting up the analysis.&lt;/h2&gt;
&lt;p&gt;In this section, I downloaded stock data using quant mod. And merge the time series.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(quantmod)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: xts&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;zoo&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     as.Date, as.Date.numeric&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: TTR&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Version 0.4-0 included new data defaults. See ?getSymbols.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(PerformanceAnalytics)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;PerformanceAnalytics&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:graphics&amp;#39;:
## 
##     legend&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyr)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:xts&amp;#39;:
## 
##     first, last&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tibble)

# Download data--&amp;gt;Fix the ending date for project section
ticker1 = &amp;quot;GLD&amp;quot;
stock1 = getSymbols(ticker1,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;getSymbols&amp;#39; currently uses auto.assign=TRUE by default, but will
## use auto.assign=FALSE in 0.5-0. You will still be able to use
## &amp;#39;loadSymbols&amp;#39; to automatically load data. getOption(&amp;quot;getSymbols.env&amp;quot;)
## and getOption(&amp;quot;getSymbols.auto.assign&amp;quot;) will still be checked for
## alternate defaults.
## 
## This message is shown once per session and may be disabled by setting 
## options(&amp;quot;getSymbols.warning4.0&amp;quot;=FALSE). See ?getSymbols for details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## WARNING: There have been significant changes to Yahoo Finance data.
## Please see the Warning section of &amp;#39;?getSymbols.yahoo&amp;#39; for details.
## 
## This message is shown once per session and may be disabled by setting
## options(&amp;quot;getSymbols.yahoo.warning&amp;quot;=FALSE).&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(stock1) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock1 = stock1[,6]

ticker2 = &amp;quot;TLT&amp;quot;
stock2 = getSymbols(ticker2,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)
names(stock2) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock2 = stock2[,6]

ticker3 = &amp;quot;VGSH&amp;quot;
stock3 = getSymbols(ticker3,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)
names(stock3) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock3 = stock3[,6]

ticker4 = &amp;quot;VTI&amp;quot;
stock4 = getSymbols(ticker4,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)
names(stock4) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock4 = stock4[,6]

# Merge the time series and subset NA
#These are the various time series
ticker_list = c(&amp;quot;stock1&amp;quot;,&amp;quot;stock2&amp;quot;,&amp;quot;stock3&amp;quot;,&amp;quot;stock4&amp;quot;)

#read in list. Loop through and assign variable to holder variable. Then assign it to combined list
ticker_all = get(ticker_list[1])  

#Merging in the time series
for(i in 2:length(ticker_list)){
  ticker_ind = get(ticker_list[i])
  ticker_all = merge(ticker_all,ticker_ind)  
}

names(ticker_all) = c(&amp;quot;stock1&amp;quot;,&amp;quot;stock2&amp;quot;,&amp;quot;stock3&amp;quot;,&amp;quot;stock4&amp;quot;)

ticker_all = subset(ticker_all,!is.na(ticker_all$stock1) &amp;amp; !is.na(ticker_all$stock2) &amp;amp; !is.na(ticker_all$stock3) &amp;amp; !is.na(ticker_all$stock4))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;running-the-simulation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Running the simulation&lt;/h2&gt;
&lt;p&gt;Next, I run the simulation - By intialising 25% asset allocation in each of the asset and rebalance at the end of each year. Daily portfolio returns are then obtained throught the ROC function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Assign equal weights to each stream of returns
ticker_all = cbind(ticker_all,rowMeans(ticker_all))
ticker_all = subset(ticker_all,!is.na(ticker_all[,4]))
ticker_all = ticker_all[,-ncol(ticker_all)]

#Identify the period of rebalancing. Show the indexes
rebal_index = data.frame(index = endpoints(ticker_all,on=&amp;quot;years&amp;quot;)[-1])
# endpoints(ticker_all,on=&amp;quot;quarters&amp;quot;) 

#Merge in the indicator into ticker_all--Can&amp;#39;t seem to merge. Will do the inefficient loop
# merge(ticker_all,rebal_index, by = &amp;quot;index&amp;quot;, all = T)
ticker_all$rebal = NA
for(i in 1:nrow(rebal_index)){
  ticker_all$rebal[rebal_index$index[i]] = 1
}

ticker_all$rebal = ifelse(is.na(ticker_all$rebal),0,ticker_all$rebal)

#Create the returns for each price series
ticker_all$ret1 = ROC(ticker_all[,1])
ticker_all$ret2 = ROC(ticker_all[,2])
ticker_all$ret3 = ROC(ticker_all[,3])
ticker_all$ret4 = ROC(ticker_all[,4])

#Initialise value for each stock series, with a total portfolio value
ticker_all$val1 = NA; ticker_all$val1[1] = 100
ticker_all$val2 = NA; ticker_all$val2[1] = 100
ticker_all$val3 = NA; ticker_all$val3[1] = 100
ticker_all$val4 = NA; ticker_all$val4[1] = 100

ticker_all$portfolio_val = NA
ticker_all$portfolio_val[1] = rowSums(ticker_all[1,which(names(ticker_all) == &amp;quot;val1&amp;quot;):which(names(ticker_all) == &amp;quot;val4&amp;quot;)])



#Loop each row and &amp;#39;compound&amp;#39;. Till it reaches the rebalancing date. Then reset stock value amount in that day. Take the portfolio value in t-1
for(i in 2:nrow(ticker_all)){
  
  if(as.numeric(ticker_all$rebal[i]) == 0){
    
  #During non-rebalancing days
  ticker_all$val1[i] = as.numeric(ticker_all$val1[i-1]) * (1 + as.numeric(ticker_all$ret1[i]))
  ticker_all$val2[i] = as.numeric(ticker_all$val2[i-1]) * (1 + as.numeric(ticker_all$ret2[i]))
  ticker_all$val3[i] = as.numeric(ticker_all$val3[i-1]) * (1 + as.numeric(ticker_all$ret3[i]))
  ticker_all$val4[i] = as.numeric(ticker_all$val4[i-1]) * (1 + as.numeric(ticker_all$ret4[i]))

  ticker_all$portfolio_val[i] = rowSums(ticker_all[i,which(names(ticker_all) == &amp;quot;val1&amp;quot;):which(names(ticker_all) == &amp;quot;val4&amp;quot;)])
  
  }else{
  #During re-balancing days
  ticker_all$val1[i] = ticker_all$portfolio_val[i-1] / 4
  ticker_all$val2[i] = ticker_all$portfolio_val[i-1] / 4
  ticker_all$val3[i] = ticker_all$portfolio_val[i-1] / 4
  ticker_all$val4[i] = ticker_all$portfolio_val[i-1] / 4
  
  ticker_all$portfolio_val[i] = rowSums(ticker_all[i,which(names(ticker_all) == &amp;quot;val1&amp;quot;):which(names(ticker_all) == &amp;quot;val4&amp;quot;)])  
  } 
}

#Generate the daily portfolio returns
ticker_all$portfolio_ret = ROC(ticker_all$portfolio_val)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;portfolio-performance-for-the-entire-period&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Portfolio Performance for the entire period&lt;/h2&gt;
&lt;p&gt;On the annualized returns, itâ€™s not really fantastic. But it still returns a respectable annualized performance of 5% (+ 2% dividends?)&lt;/p&gt;
&lt;p&gt;What stands out, however, are the following performance metrics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In terms of draw-down, it performed remarkably well relative to a GOLD &amp;amp; Total US Stock portfolio. It suffered a loss of only 9% as compared to a loss of 20+ % in other assets; couldâ€™ve be more if full Great Financial Crisis is included (in my post analysis, it could go up to 60% if Great Financial Crisis is included).&lt;/li&gt;
&lt;li&gt;On the Sharpe Ratio (annualized returns in excess of risk-free rate per unit of volatility), itâ€™s considerably higher than other assets - albeit lower than Total Stock (in my other analysis with longer time period, itâ€™s considerably higher).&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;######################################Study the portfolio returns########################################
#Carry out the portfolio return series
table.Drawdowns(ticker_all$portfolio_ret, top=10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          From     Trough         To   Depth Length To Trough Recovery
## 1  2012-10-05 2013-06-26 2014-06-19 -0.0882    427       180      247
## 2  2016-07-11 2016-12-15 2017-08-30 -0.0828    289       112      177
## 3  2015-01-26 2016-01-14 2016-06-08 -0.0804    346       246      100
## 4  2009-12-03 2010-02-10 2010-04-14 -0.0471     90        47       43
## 5  2018-01-29 2018-02-08       &amp;lt;NA&amp;gt; -0.0415     46         9       NA
## 6  2011-09-07 2011-09-28 2011-11-03 -0.0409     42        16       26
## 7  2012-02-29 2012-05-16 2012-08-24 -0.0391    125        55       70
## 8  2011-11-08 2011-12-15 2012-01-27 -0.0368     55        27       28
## 9  2010-11-09 2010-11-17 2011-02-28 -0.0317     76         7       69
## 10 2014-09-02 2014-09-17 2014-12-09 -0.0274     70        12       58&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.DownsideRisk(merge(ticker_all$portfolio_ret, ticker_all$ret1, ticker_all$ret2, ticker_all$ret3, ticker_all$ret4))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                               portfolio_ret    ret1    ret2    ret3
## Semi Deviation                       0.0029  0.0077  0.0065  0.0005
## Gain Deviation                       0.0023  0.0066  0.0056  0.0004
## Loss Deviation                       0.0028  0.0079  0.0060  0.0004
## Downside Deviation (MAR=210%)        0.0090  0.0128  0.0117  0.0083
## Downside Deviation (Rf=0%)           0.0028  0.0076  0.0064  0.0004
## Downside Deviation (0%)              0.0028  0.0076  0.0064  0.0004
## Maximum Drawdown                     0.0882  0.4922  0.2147  0.0106
## Historical VaR (95%)                -0.0062 -0.0169 -0.0146 -0.0010
## Historical ES (95%)                 -0.0090 -0.0253 -0.0193 -0.0014
## Modified VaR (95%)                  -0.0064 -0.0177 -0.0146 -0.0010
## Modified ES (95%)                   -0.0108 -0.0342 -0.0210 -0.0015
##                                  ret4
## Semi Deviation                 0.0071
## Gain Deviation                 0.0062
## Loss Deviation                 0.0077
## Downside Deviation (MAR=210%)  0.0119
## Downside Deviation (Rf=0%)     0.0069
## Downside Deviation (0%)        0.0069
## Maximum Drawdown               0.2169
## Historical VaR (95%)          -0.0158
## Historical ES (95%)           -0.0237
## Modified VaR (95%)            -0.0158
## Modified ES (95%)             -0.0294&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.AnnualizedReturns(merge(ticker_all$portfolio_ret, ticker_all$ret1, ticker_all$ret2, ticker_all$ret3, ticker_all$ret4))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                           portfolio_ret    ret1   ret2   ret3   ret4
## Annualized Return                0.0469 -0.0017 0.0500 0.0069 0.1206
## Annualized Std Dev               0.0611  0.1651 0.1427 0.0101 0.1519
## Annualized Sharpe (Rf=0%)        0.7674 -0.0103 0.3503 0.6756 0.7937&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;charts.PerformanceSummary(merge(ticker_all$portfolio_ret, ticker_all$ret1, ticker_all$ret2, ticker_all$ret3, ticker_all$ret4))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/perm_port_proj_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;yearly-portfolio-performance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Yearly Portfolio Performance&lt;/h2&gt;
&lt;p&gt;I also tabulated the yearly metrics of the portfolio to give a sense of the performance over years.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#####################################Study the annualized portfolio returns series#######################
#Use the rebal-indicator. Loop through the chunks
# https://www.quantmod.com/documentation/periodReturn.html
# https://rpubs.com/mohammadshadan/288218
# yearly_ret = periodReturn(ticker_all$portfolio_val
#              ,period=&amp;#39;yearly&amp;#39;,subset=&amp;#39;2004::&amp;#39;)  # returns years 2003 to present

yearly_ret = periodReturn(ticker_all$portfolio_val
                          ,period=&amp;#39;yearly&amp;#39;)  # returns years 2003 to present

#Inefficient way to calulate standard deviation. If it&amp;#39;ve time, I will probably optimize this
split_val = split(ticker_all$portfolio_ret, f = &amp;quot;years&amp;quot;)
yearly_ret$annual_sd = sapply(X = split_val, FUN = StdDev) * sqrt(252)


getSymbols(&amp;#39;DGS3MO&amp;#39;,src = &amp;#39;FRED&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;DGS3MO&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rf = DGS3MO; rm(DGS3MO)
rf = rf[&amp;quot;2009/2018&amp;quot;] 

split_val_rf = split(rf$DGS3MO, f = &amp;quot;years&amp;quot;)
yearly_ret$annual_rf = sapply(X = split_val_rf, FUN = mean, na.rm = T)/100 

yearly_ret$Sharpe = (yearly_ret$yearly.returns - yearly_ret$annual_rf)/yearly_ret$annual_sd  

yearly_ret&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            yearly.returns  annual_sd    annual_rf     Sharpe
## 2009-12-31    -0.02143548 0.07391424 0.0015092000 -0.3104230
## 2010-12-31     0.12503869 0.06925292 0.0013844622  1.7855452
## 2011-12-30     0.09201080 0.07228724 0.0005284000  1.2655400
## 2012-12-31     0.05353343 0.05504939 0.0008760000  0.9565489
## 2013-12-31    -0.02919578 0.06965068 0.0005708000 -0.4273696
## 2014-12-31     0.09449067 0.04879063 0.0003272000  1.9299499
## 2015-12-31    -0.03608942 0.06101808 0.0005250996 -0.6000601
## 2016-12-30     0.05106338 0.06221028 0.0031936000  0.7694834
## 2017-12-29     0.10340429 0.04264321 0.0094896000  2.2023362
## 2018-04-03    -0.01057814 0.06051025 0.0158516129 -0.4367815&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(yearly_ret$yearly.returns)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/perm_port_proj_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(yearly_ret$Sharpe)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/perm_port_proj_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
